{"ast":null,"code":"var _jsxFileName = \"/Users/davidneuman/OneDrive - Hunter - CUNY/COLLEGE/WEB DEVELOPMENT/finalProject/final-project-frontend/src/components/containers/CampusContainer.js\";\n\n/*==================================================\nCampusContainer.js\n\nThe Container component is responsible for stateful logic and data fetching, and\npasses data (if any) as props to the corresponding View component.\nIf needed, it also defines the component's \"connect\" function.\n================================================== */\nimport Header from './Header';\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { fetchCampusThunk, deleteCampusThunk, editStudentThunk } from \"../../store/thunks\";\nimport { CampusView } from \"../views\"; // import { deleteCampus, editStudent } from '../../store/actions/actionCreators';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CampusContainer extends Component {\n  // Get the specific campus data from back-end database\n  componentDidMount() {\n    // Get campus ID from URL (API link)\n    this.props.fetchCampus(this.props.match.params.id);\n  } // Render a Campus view by passing campus data as props to the corresponding View component\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CampusView, {\n        campus: this.props.campus,\n        deleteCampus: this.props.deleteCampus,\n        editStudent: this.props.editStudent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n\n} // The following 2 input arguments are passed to the \"connect\" function used by \"CampusContainer\" component to connect to Redux Store.\n// 1. The \"mapState\" argument specifies the data from Redux Store that the component needs.\n// The \"mapState\" is called when the Store State changes, and it returns a data object of \"campus\".\n\n\nconst mapState = state => {\n  return {\n    campus: state.campus // Get the State object from Reducer \"campus\"\n\n  };\n}; // 2. The \"mapDispatch\" argument is used to dispatch Action (Redux Thunk) to Redux Store.\n// The \"mapDispatch\" calls the specific Thunk to dispatch its action. The \"dispatch\" is a function of Redux Store.\n\n\nconst mapDispatch = dispatch => {\n  return {\n    fetchCampus: id => dispatch(fetchCampusThunk(id)),\n    deleteCampus: campusId => dispatch(deleteCampusThunk(campusId)),\n    editStudent: (id, student) => dispatch(editStudentThunk(id, student))\n  };\n}; // Export store-connected container by default\n// CampusContainer uses \"connect\" function to connect to Redux Store and to read values from the Store \n// (and re-read the values when the Store State updates).\n\n\nexport default withRouter(connect(mapState, mapDispatch)(CampusContainer));","map":{"version":3,"sources":["/Users/davidneuman/OneDrive - Hunter - CUNY/COLLEGE/WEB DEVELOPMENT/finalProject/final-project-frontend/src/components/containers/CampusContainer.js"],"names":["Header","React","Component","connect","withRouter","fetchCampusThunk","deleteCampusThunk","editStudentThunk","CampusView","CampusContainer","componentDidMount","props","fetchCampus","match","params","id","render","campus","deleteCampus","editStudent","mapState","state","mapDispatch","dispatch","campusId","student"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,gBAAT,EAA2BC,iBAA3B,EAA8CC,gBAA9C,QAAsE,oBAAtE;AAEA,SAASC,UAAT,QAA2B,UAA3B,C,CACA;;;;AAEA,MAAMC,eAAN,SAA8BP,SAA9B,CAAwC;AAEtC;AACAQ,EAAAA,iBAAiB,GAAG;AAClB;AACA,SAAKC,KAAL,CAAWC,WAAX,CAAuB,KAAKD,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACD,GANqC,CAStC;;;AACAC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,UAAD;AACA,QAAA,MAAM,EAAE,KAAKL,KAAL,CAAWM,MADnB;AAEA,QAAA,YAAY,EAAE,KAAKN,KAAL,CAAWO,YAFzB;AAGA,QAAA,WAAW,EAAE,KAAKP,KAAL,CAAWQ;AAHxB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AArBqC,C,CAwBxC;AACA;AACA;;;AACA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,SAAO;AACLJ,IAAAA,MAAM,EAAEI,KAAK,CAACJ,MADT,CACkB;;AADlB,GAAP;AAGD,CAJD,C,CAKA;AACA;;;AACA,MAAMK,WAAW,GAAIC,QAAD,IAAc;AAChC,SAAO;AACLX,IAAAA,WAAW,EAAGG,EAAD,IAAQQ,QAAQ,CAAClB,gBAAgB,CAACU,EAAD,CAAjB,CADxB;AAELG,IAAAA,YAAY,EAAGM,QAAD,IAAcD,QAAQ,CAACjB,iBAAiB,CAACkB,QAAD,CAAlB,CAF/B;AAGLL,IAAAA,WAAW,EAAE,CAACJ,EAAD,EAAKU,OAAL,KAAiBF,QAAQ,CAAChB,gBAAgB,CAACQ,EAAD,EAAKU,OAAL,CAAjB;AAHjC,GAAP;AAKD,CAND,C,CAQA;AACA;AACA;;;AACA,eAAerB,UAAU,CAACD,OAAO,CAACiB,QAAD,EAAWE,WAAX,CAAP,CAA+Bb,eAA/B,CAAD,CAAzB","sourcesContent":["/*==================================================\nCampusContainer.js\n\nThe Container component is responsible for stateful logic and data fetching, and\npasses data (if any) as props to the corresponding View component.\nIf needed, it also defines the component's \"connect\" function.\n================================================== */\nimport Header from './Header';\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { fetchCampusThunk, deleteCampusThunk, editStudentThunk } from \"../../store/thunks\";\n\nimport { CampusView } from \"../views\";\n// import { deleteCampus, editStudent } from '../../store/actions/actionCreators';\n\nclass CampusContainer extends Component {\n\n  // Get the specific campus data from back-end database\n  componentDidMount() {\n    // Get campus ID from URL (API link)\n    this.props.fetchCampus(this.props.match.params.id);\n  }\n\n\n  // Render a Campus view by passing campus data as props to the corresponding View component\n  render() {\n    return (\n      <div>\n        <Header />\n        <CampusView \n        campus={this.props.campus} \n        deleteCampus={this.props.deleteCampus}  \n        editStudent={this.props.editStudent} \n        />\n      </div>\n    );\n  }\n}\n\n// The following 2 input arguments are passed to the \"connect\" function used by \"CampusContainer\" component to connect to Redux Store.\n// 1. The \"mapState\" argument specifies the data from Redux Store that the component needs.\n// The \"mapState\" is called when the Store State changes, and it returns a data object of \"campus\".\nconst mapState = (state) => {\n  return {\n    campus: state.campus,  // Get the State object from Reducer \"campus\"\n  };\n};\n// 2. The \"mapDispatch\" argument is used to dispatch Action (Redux Thunk) to Redux Store.\n// The \"mapDispatch\" calls the specific Thunk to dispatch its action. The \"dispatch\" is a function of Redux Store.\nconst mapDispatch = (dispatch) => {\n  return {\n    fetchCampus: (id) => dispatch(fetchCampusThunk(id)),\n    deleteCampus: (campusId) => dispatch(deleteCampusThunk(campusId)),\n    editStudent: (id, student) => dispatch(editStudentThunk(id, student))\n  };\n};\n\n// Export store-connected container by default\n// CampusContainer uses \"connect\" function to connect to Redux Store and to read values from the Store \n// (and re-read the values when the Store State updates).\nexport default withRouter(connect(mapState, mapDispatch)(CampusContainer));"]},"metadata":{},"sourceType":"module"}