{"ast":null,"code":"var _jsxFileName = \"/Users/davidneuman/OneDrive - Hunter - CUNY/COLLEGE/WEB DEVELOPMENT/finalProject/final-project-frontend/src/components/views/CampusView.js\";\n\n/*==================================================\nCampusView.js\n\nThe Views component is responsible for rendering web page with data provided by the corresponding Container component.\nIt constructs a React component to display a single campus and its students (if any).\n================================================== */\nimport { Link } from \"react-router-dom\"; // Take in props data to construct the component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CampusView = props => {\n  const {\n    campus,\n    deleteCampus,\n    editCampus\n  } = props; // If there is no campus, display a message.\n\n  function removeStudentCampus(id) {\n    var updatedCampus = campus;\n    updatedCampus.students.map(student => {\n      if (student.id === id) {\n        return student.campusId = null;\n      }\n    });\n    console.log(updatedCampus);\n    return updatedCampus;\n  }\n\n  function removeStudent(id) {\n    // event.preventDefault();  // Prevent browser reload/refresh after submit.\n    console.log(id); // Edit student in back-end database\n\n    editCampus(campus.id, removeStudentCampus(id)); // Update state, and trigger redirect to show the edited student\n  }\n\n  function getStudents(campus) {\n    if (!campus.students.length) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"There are no students.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 16\n      }, this);\n    } else {\n      return campus.students.map(student => {\n        let name = student.firstname + \" \" + student.lastname;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: `/student/${student.id}`,\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => removeStudent(student.id),\n              children: \"Delete Student\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this)\n        }, student.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this);\n      });\n    }\n  } // Render a single Campus view with list of its students\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: campus.imageUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: campus.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: campus.address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: campus.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), getStudents(campus), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/editcampus/${campus.id}`,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Edit Campus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/campuses/`,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteCampus(campus.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CampusView;\nexport default CampusView;\n\nvar _c;\n\n$RefreshReg$(_c, \"CampusView\");","map":{"version":3,"sources":["/Users/davidneuman/OneDrive - Hunter - CUNY/COLLEGE/WEB DEVELOPMENT/finalProject/final-project-frontend/src/components/views/CampusView.js"],"names":["Link","CampusView","props","campus","deleteCampus","editCampus","removeStudentCampus","id","updatedCampus","students","map","student","campusId","console","log","removeStudent","getStudents","length","name","firstname","lastname","imageUrl","address","description"],"mappings":"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","sourcesContent":["/*==================================================\nCampusView.js\n\nThe Views component is responsible for rendering web page with data provided by the corresponding Container component.\nIt constructs a React component to display a single campus and its students (if any).\n================================================== */\nimport { Link } from \"react-router-dom\";\n\n// Take in props data to construct the component\nconst CampusView = (props) => {\n  const {campus, deleteCampus, editCampus} = props;\n    // If there is no campus, display a message.\n\n    function removeStudentCampus(id) {\n        var updatedCampus = campus;\n        updatedCampus.students.map((student )=> {\n            if(student.id === id){ \n                return student.campusId = null;\n            }});\n        console.log(updatedCampus);\n        return updatedCampus;\n    }\n    \n     function removeStudent(id) {\n        // event.preventDefault();  // Prevent browser reload/refresh after submit.\n        console.log(id);\n        // Edit student in back-end database\n        editCampus(campus.id, removeStudentCampus(id));\n    \n        // Update state, and trigger redirect to show the edited student\n    \n      }\n    \n\n  function getStudents(campus) {\n    if (!campus.students.length) {\n        return <div>There are no students.</div>;\n      }\n      else{\n        return campus.students.map( student => {\n            let name = student.firstname + \" \" + student.lastname;\n            return (\n              <div key={student.id}>\n                <h2>\n                    <Link to={`/student/${student.id}`}>\n                    {name}\n                    </Link>          \n                    <button onClick={() => removeStudent(student.id)}>Delete Student</button>   \n                </h2>\n              </div>\n            );\n          })\n      }\n    }\n\n  // Render a single Campus view with list of its students\n  return (\n    <div>\n      <img src={campus.imageUrl}></img>\n      <h1>{campus.name}</h1>\n      <p>{campus.address}</p>\n      <p>{campus.description}</p>\n      {getStudents(campus)}\n      <br/>\n      <br/>\n    <Link to={`/editcampus/${campus.id}`}>\n        <button>Edit Campus</button>\n    </Link>\n    <br/><br/>\n    <Link to={`/campuses/`}>\n    <button onClick={() => deleteCampus(campus.id)}>Delete</button>\n    </Link>\n    </div>\n  );\n};\n\nexport default CampusView;"]},"metadata":{},"sourceType":"module"}