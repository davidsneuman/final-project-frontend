{"ast":null,"code":"var _jsxFileName = \"/Users/davidneuman/OneDrive - Hunter - CUNY/COLLEGE/WEB DEVELOPMENT/finalProject/final-project-frontend/src/components/views/CampusView.js\";\n\n/*==================================================\nCampusView.js\n\nThe Views component is responsible for rendering web page with data provided by the corresponding Container component.\nIt constructs a React component to display a single campus and its students (if any).\n================================================== */\nimport { Link } from \"react-router-dom\"; // Take in props data to construct the component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CampusView = props => {\n  const {\n    campus,\n    deleteCampus,\n    editCampus,\n    removeStudentCampus\n  } = props; // If there is no campus, display a message.\n\n  function getStudents(campus) {\n    if (!campus.students.length) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"There are no students.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 16\n      }, this);\n    } else {\n      return campus.students.map(student => {\n        let name = student.firstname + \" \" + student.lastname;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: `/student/${student.id}`,\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => editCampus(this.props.campus.id, this.props.removeStudentCampus(student.id)),\n              children: \"Delete Student\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 17\n          }, this)\n        }, student.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }, this);\n      });\n    }\n  } // Render a single Campus view with list of its students\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: campus.imageUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: campus.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: campus.address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: campus.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), getStudents(campus), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/editcampus/${campus.id}`,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Edit Campus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/campuses/`,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteCampus(campus.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CampusView;\nexport default CampusView;\n\nvar _c;\n\n$RefreshReg$(_c, \"CampusView\");","map":{"version":3,"sources":["/Users/davidneuman/OneDrive - Hunter - CUNY/COLLEGE/WEB DEVELOPMENT/finalProject/final-project-frontend/src/components/views/CampusView.js"],"names":["Link","CampusView","props","campus","deleteCampus","editCampus","removeStudentCampus","getStudents","students","length","map","student","name","firstname","lastname","id","imageUrl","address","description"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,IAAT,QAAqB,kBAArB,C,CAEA;;;;AACA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,QAAM;AAACC,IAAAA,MAAD;AAASC,IAAAA,YAAT;AAAuBC,IAAAA,UAAvB;AAAmCC,IAAAA;AAAnC,MAA0DJ,KAAhE,CAD4B,CAE1B;;AAGF,WAASK,WAAT,CAAqBJ,MAArB,EAA6B;AAC3B,QAAI,CAACA,MAAM,CAACK,QAAP,CAAgBC,MAArB,EAA6B;AACzB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFH,MAGM;AACF,aAAON,MAAM,CAACK,QAAP,CAAgBE,GAAhB,CAAqBC,OAAO,IAAI;AACnC,YAAIC,IAAI,GAAGD,OAAO,CAACE,SAAR,GAAoB,GAApB,GAA0BF,OAAO,CAACG,QAA7C;AACA,4BACE;AAAA,iCACE;AAAA,oCACI,QAAC,IAAD;AAAM,cAAA,EAAE,EAAG,YAAWH,OAAO,CAACI,EAAG,EAAjC;AAAA,wBACCH;AADD;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII;AAAQ,cAAA,OAAO,EAAE,MAAMP,UAAU,CAAC,KAAKH,KAAL,CAAWC,MAAX,CAAkBY,EAAnB,EAAuB,KAAKb,KAAL,CAAWI,mBAAX,CAA+BK,OAAO,CAACI,EAAvC,CAAvB,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,WAAUJ,OAAO,CAACI,EAAlB;AAAA;AAAA;AAAA;AAAA,gBADF;AAUD,OAZI,CAAP;AAaD;AACF,GAxByB,CA0B5B;;;AACA,sBACE;AAAA,4BACE;AAAK,MAAA,GAAG,EAAEZ,MAAM,CAACa;AAAjB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAKb,MAAM,CAACS;AAAZ;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,gBAAIT,MAAM,CAACc;AAAX;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,gBAAId,MAAM,CAACe;AAAX;AAAA;AAAA;AAAA;AAAA,YAJF,EAKGX,WAAW,CAACJ,MAAD,CALd,eAME;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAA;AAAA;AAAA;AAAA,YAPF,eAQA,QAAC,IAAD;AAAM,MAAA,EAAE,EAAG,eAAcA,MAAM,CAACY,EAAG,EAAnC;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YARA,eAWA;AAAA;AAAA;AAAA;AAAA,YAXA,eAWK;AAAA;AAAA;AAAA;AAAA,YAXL,eAYA,QAAC,IAAD;AAAM,MAAA,EAAE,EAAG,YAAX;AAAA,6BACA;AAAQ,QAAA,OAAO,EAAE,MAAMX,YAAY,CAACD,MAAM,CAACY,EAAR,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAZA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA7CD;;KAAMd,U;AA+CN,eAAeA,UAAf","sourcesContent":["/*==================================================\nCampusView.js\n\nThe Views component is responsible for rendering web page with data provided by the corresponding Container component.\nIt constructs a React component to display a single campus and its students (if any).\n================================================== */\nimport { Link } from \"react-router-dom\";\n\n// Take in props data to construct the component\nconst CampusView = (props) => {\n  const {campus, deleteCampus, editCampus, removeStudentCampus} = props;\n    // If there is no campus, display a message.\n\n\n  function getStudents(campus) {\n    if (!campus.students.length) {\n        return <div>There are no students.</div>;\n      }\n      else{\n        return campus.students.map( student => {\n            let name = student.firstname + \" \" + student.lastname;\n            return (\n              <div key={student.id}>\n                <h2>\n                    <Link to={`/student/${student.id}`}>\n                    {name}\n                    </Link>          \n                    <button onClick={() => editCampus(this.props.campus.id, this.props.removeStudentCampus(student.id))}>Delete Student</button>   \n                </h2>\n              </div>\n            );\n          })\n      }\n    }\n\n  // Render a single Campus view with list of its students\n  return (\n    <div>\n      <img src={campus.imageUrl}></img>\n      <h1>{campus.name}</h1>\n      <p>{campus.address}</p>\n      <p>{campus.description}</p>\n      {getStudents(campus)}\n      <br/>\n      <br/>\n    <Link to={`/editcampus/${campus.id}`}>\n        <button>Edit Campus</button>\n    </Link>\n    <br/><br/>\n    <Link to={`/campuses/`}>\n    <button onClick={() => deleteCampus(campus.id)}>Delete</button>\n    </Link>\n    </div>\n  );\n};\n\nexport default CampusView;"]},"metadata":{},"sourceType":"module"}