{"ast":null,"code":"var _jsxFileName = \"/Users/davidneuman/OneDrive - Hunter - CUNY/COLLEGE/WEB DEVELOPMENT/finalProject/final-project-frontend/src/components/views/CampusView.js\";\n\n/*==================================================\nCampusView.js\n\nThe Views component is responsible for rendering web page with data provided by the corresponding Container component.\nIt constructs a React component to display a single campus and its students (if any).\n================================================== */\nimport { Link } from \"react-router-dom\"; // Take in props data to construct the component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CampusView = props => {\n  const {\n    campus\n  } = props; // If there is no campus, display a message.\n\n  function getStudents(campus) {\n    if (!props.campus.students) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"There are no students.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 16\n      }, this);\n    } else {\n      return campus.students.map(student => {\n        let name = student.firstname + \" \" + student.lastname;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/student/${student.id}`,\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 17\n          }, this)\n        }, student.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 15\n        }, this);\n      });\n    }\n  } // Render a single Campus view with list of its students\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: campus.imageUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: campus.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: campus.address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: campus.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), getStudents(campus), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/newcampus`,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add New Campus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CampusView;\nexport default CampusView;\n\nvar _c;\n\n$RefreshReg$(_c, \"CampusView\");","map":{"version":3,"sources":["/Users/davidneuman/OneDrive - Hunter - CUNY/COLLEGE/WEB DEVELOPMENT/finalProject/final-project-frontend/src/components/views/CampusView.js"],"names":["Link","CampusView","props","campus","getStudents","students","map","student","name","firstname","lastname","id","imageUrl","address","description"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,IAAT,QAAqB,kBAArB,C,CAEA;;;;AACA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,QAAM;AAACC,IAAAA;AAAD,MAAWD,KAAjB,CAD4B,CAE1B;;AAEF,WAASE,WAAT,CAAqBD,MAArB,EAA6B;AAC3B,QAAI,CAACD,KAAK,CAACC,MAAN,CAAaE,QAAlB,EAA4B;AACxB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFH,MAGM;AACF,aAAOF,MAAM,CAACE,QAAP,CAAgBC,GAAhB,CAAqBC,OAAO,IAAI;AACnC,YAAIC,IAAI,GAAGD,OAAO,CAACE,SAAR,GAAoB,GAApB,GAA0BF,OAAO,CAACG,QAA7C;AACA,4BACE;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,YAAWH,OAAO,CAACI,EAAG,EAAjC;AAAA,mCACE;AAAA,wBAAKH;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,WAAUD,OAAO,CAACI,EAAlB;AAAA;AAAA;AAAA;AAAA,gBADF;AAOD,OATI,CAAP;AAUD;AACF,GApByB,CAsB5B;;;AACA,sBACE;AAAA,4BACE;AAAK,MAAA,GAAG,EAAER,MAAM,CAACS;AAAjB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAKT,MAAM,CAACK;AAAZ;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,gBAAIL,MAAM,CAACU;AAAX;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,gBAAIV,MAAM,CAACW;AAAX;AAAA;AAAA;AAAA;AAAA,YAJF,EAKGV,WAAW,CAACD,MAAD,CALd,eAME;AAAA;AAAA;AAAA;AAAA,YANF,eAOE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAG,YAAX;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF,eAUE;AAAA;AAAA;AAAA;AAAA,YAVF,eAUO;AAAA;AAAA;AAAA;AAAA,YAVP;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CArCD;;KAAMF,U;AAuCN,eAAeA,UAAf","sourcesContent":["/*==================================================\nCampusView.js\n\nThe Views component is responsible for rendering web page with data provided by the corresponding Container component.\nIt constructs a React component to display a single campus and its students (if any).\n================================================== */\nimport { Link } from \"react-router-dom\";\n\n// Take in props data to construct the component\nconst CampusView = (props) => {\n  const {campus} = props;\n    // If there is no campus, display a message.\n\n  function getStudents(campus) {\n    if (!props.campus.students) {\n        return <div>There are no students.</div>;\n      }\n      else{\n        return campus.students.map( student => {\n            let name = student.firstname + \" \" + student.lastname;\n            return (\n              <div key={student.id}>\n                <Link to={`/student/${student.id}`}>\n                  <h2>{name}</h2>\n                </Link>             \n              </div>\n            );\n          })\n      }\n    }\n\n  // Render a single Campus view with list of its students\n  return (\n    <div>\n      <img src={campus.imageUrl}></img>\n      <h1>{campus.name}</h1>\n      <p>{campus.address}</p>\n      <p>{campus.description}</p>\n      {getStudents(campus)}\n      <br/>\n      <Link to={`/newcampus`}>\n        <button>Add New Campus</button>\n      </Link>\n      <br/><br/>\n    </div>\n  );\n};\n\nexport default CampusView;"]},"metadata":{},"sourceType":"module"}